{"ast":null,"code":"var _jsxFileName = \"/home/matheussg/Documentos/OmniStack10/Web/src/pages/Company.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../services/api.js\";\nimport \"../global.css\";\nimport \"../App.css\";\nimport \"../Sidebar.css\";\nimport \"../Main.css\";\nimport CompanyForm from \"../components/CompanyForm/index.js\";\nimport CompanyFormUpdate from \"../components/CompanyFormUpdate/index.js\";\nimport CompanyItem from \"../components/CompanyItem/index.js\";\nimport CompanyJobs from \"../components/CompanyJob/index\";\nimport Header from \"../components/Header/index\"; // Componente -> Bloco isolado de HTML, CSS e JS o qual não interfere no restante da aplicação.\n// Propriedade -> Informações que um componente PAI passa para o componente FILHO\n// Estado -> Informações mantidas pelo componente (Lembrar: Imutabilidade)\n\nfunction Company() {\n  const [companies, setCompanies] = useState([]);\n  const [insertForm, setInsertForm] = useState(true);\n  const [companyUpdate, setCompanyUpdate] = useState([]);\n  const [showJobs, setShowJobs] = useState(false);\n  const [companyToShow, setCompanyToShow] = useState(false);\n  useEffect(() => {\n    async function loadCompanies() {\n      const response = await api.get(\"/company\");\n      setCompanies(response.data);\n    }\n\n    loadCompanies();\n  }, []);\n\n  async function handleAddCompany(data) {\n    const response = await api.post(\"/company\", data);\n    setCompanies([...companies, response.data]);\n  }\n\n  async function changeFormToUpdate(companyUpdate) {\n    await setInsertForm(true);\n    setCompanyUpdate(companyUpdate.company);\n    setInsertForm(false);\n  }\n\n  async function changeFormToCreate() {\n    setInsertForm(true);\n  }\n\n  async function handleUpdateCompany(data) {\n    var mapped = companies.map(elem => {\n      if (elem._id === data._id) {\n        elem.name = data.name;\n        elem.desc = data.desc;\n        elem.avatar_url = data.avatar_url;\n        elem.jobs = data.jobs === null || data.jobs === undefined ? [] : data.jobs;\n        elem.location.coordinates[0] = data.longitude;\n        elem.location.coordinates[1] = data.latitude;\n      }\n\n      return elem;\n    });\n    await api.post(`/company/${data._id}`, data);\n    setCompanies(mapped);\n  }\n\n  async function deleteCompany(deleteCompany) {\n    await api.delete(`/company/${deleteCompany.company._id}`);\n    let filtered = await companies.filter(elem => {\n      return elem._id !== deleteCompany.company._id;\n    });\n    setCompanies(filtered);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"JobRadar\"), !insertForm ? React.createElement(CompanyFormUpdate, {\n    companyUpdate: companyUpdate,\n    onSubmitUpdate: handleUpdateCompany,\n    changeFormToCreate: changeFormToCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }) : React.createElement(CompanyForm, {\n    onSubmit: handleAddCompany,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"content = companies.map(company => (\", React.createElement(CompanyItem, {\n    key: company._id,\n    changeFormToUpdate: changeFormToUpdate,\n    deleteCompany: deleteCompany,\n    company: company,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \"))\"))));\n}\n\nexport default Company;","map":{"version":3,"sources":["/home/matheussg/Documentos/OmniStack10/Web/src/pages/Company.js"],"names":["React","useState","useEffect","api","CompanyForm","CompanyFormUpdate","CompanyItem","CompanyJobs","Header","Company","companies","setCompanies","insertForm","setInsertForm","companyUpdate","setCompanyUpdate","showJobs","setShowJobs","companyToShow","setCompanyToShow","loadCompanies","response","get","data","handleAddCompany","post","changeFormToUpdate","company","changeFormToCreate","handleUpdateCompany","mapped","map","elem","_id","name","desc","avatar_url","jobs","undefined","location","coordinates","longitude","latitude","deleteCompany","delete","filtered","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../services/api.js\";\n\nimport \"../global.css\";\nimport \"../App.css\";\nimport \"../Sidebar.css\";\nimport \"../Main.css\";\n\n\nimport CompanyForm from \"../components/CompanyForm/index.js\";\nimport CompanyFormUpdate from \"../components/CompanyFormUpdate/index.js\";\nimport CompanyItem from \"../components/CompanyItem/index.js\";\nimport CompanyJobs from \"../components/CompanyJob/index\";\nimport Header from \"../components/Header/index\";\n\n// Componente -> Bloco isolado de HTML, CSS e JS o qual não interfere no restante da aplicação.\n// Propriedade -> Informações que um componente PAI passa para o componente FILHO\n// Estado -> Informações mantidas pelo componente (Lembrar: Imutabilidade)\n\nfunction Company() {\n  const [companies, setCompanies] = useState([]);\n  const [insertForm, setInsertForm] = useState(true);\n  const [companyUpdate, setCompanyUpdate] = useState([]);\n  const [showJobs, setShowJobs] = useState(false);\n  const [companyToShow, setCompanyToShow] = useState(false);\n\n  useEffect(() => {\n\n    async function loadCompanies() {\n      const response = await api.get(\"/company\");\n      \n      setCompanies(response.data);\n    }\n    loadCompanies();\n  }, []);\n\n  async function handleAddCompany(data) {\n    const response = await api.post(\"/company\", data);\n\n    setCompanies([...companies, response.data]);\n  }\n\n  async function changeFormToUpdate(companyUpdate){\n    await setInsertForm(true);\n    setCompanyUpdate(companyUpdate.company);\n    setInsertForm(false);\n  }\n\n  async function changeFormToCreate(){\n    setInsertForm(true);\n  }\n\n  async function handleUpdateCompany(data){\n\n    var mapped = companies.map((elem) =>{\n      if(elem._id === data._id){\n        elem.name = data.name;\n        elem.desc = data.desc;\n        elem.avatar_url = data.avatar_url;\n        elem.jobs = ( data.jobs === null || data.jobs === undefined) ? [] : data.jobs;\n        elem.location.coordinates[0] = data.longitude;\n        elem.location.coordinates[1] = data.latitude;\n      }\n      return elem;\n    })\n\n    await api.post(`/company/${data._id}`, data);\n    setCompanies(mapped);\n  }\n\n  async function deleteCompany(deleteCompany){\n    await api.delete(`/company/${deleteCompany.company._id}`);\n\n    let filtered = await companies.filter((elem) => {\n      return elem._id !== deleteCompany.company._id;\n    })\n\n    setCompanies(filtered);\n  }\n\n  return (\n    <div>\n      <Header />\n      <div id=\"app\">\n        <aside>\n          <strong>JobRadar</strong>\n          {!insertForm ? <CompanyFormUpdate companyUpdate={companyUpdate} onSubmitUpdate={handleUpdateCompany} changeFormToCreate={changeFormToCreate} /> : <CompanyForm onSubmit={handleAddCompany} /> }\n        </aside>\n        <main>\n          <ul>\n            content = companies.map(company => (\n              <CompanyItem key={company._id} changeFormToUpdate={changeFormToUpdate} deleteCompany={deleteCompany} company={company} />\n            ))\n          </ul>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Company;\n"]},"metadata":{},"sourceType":"module"}